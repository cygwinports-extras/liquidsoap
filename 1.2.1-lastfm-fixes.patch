--- origsrc/liquidsoap-1.2.1-full/ocaml-lastfm-0.3.1/configure.ac	2015-08-03 11:18:37.000000000 -0500
+++ src/liquidsoap-1.2.1-full/ocaml-lastfm-0.3.1/configure.ac	2017-03-30 23:14:29.700273100 -0500
@@ -42,25 +42,30 @@ fi
 #
 
 AC_MSG_CHECKING(for netclient from ocamlnet)
-   if ! $OCAMLFIND query netclient > /dev/null 2>&1 ; then
-       AC_MSG_RESULT([Not found, will only build generic modules.])
-       OCAMLNET_FILES=""
-   else
-       INC="$INC `$OCAMLFIND query netclient`"
-       requires="$requires netclient"
-       AC_MSG_RESULT(ok)
-       OCAMLNET_FILES="lastfm.mli lastfm.ml"
+if ! $OCAMLFIND query netclient > /dev/null 2>&1 ; then
+  AC_MSG_RESULT([Not found, will only build generic modules.])
+  OCAMLNET_FILES=""
+else
+  INC="$INC `$OCAMLFIND query netclient`"
+  requires="$requires netclient"
+  OCAMLNET_FILES="lastfm.mli lastfm.ml"
+  AC_MSG_RESULT(ok)
 fi
 
-if test -n "$OCAMLNET_FILES" ; then
-AC_MSG_CHECKING(for netstring from ocamlnet)
-   if ! $OCAMLFIND query netstring > /dev/null 2>&1 ; then
-       AC_MSG_ERROR(Not found.)
-   else
-       INC="$INC `$OCAMLFIND query netstring`"
-       requires="$requires netstring"
-       AC_MSG_RESULT(ok)
+AC_CHECK_OCAML_BINDING([netclient],[4.0.2])
+if test -z "${W_NETCLIENT}"; then
+  OCAMLNET_FILES=""
 fi
+
+if test -n "$OCAMLNET_FILES" ; then
+  AC_MSG_CHECKING(for netstring from ocamlnet)
+  if ! $OCAMLFIND query netstring > /dev/null 2>&1 ; then
+    AC_MSG_ERROR(Not found.)
+  else
+    INC="$INC `$OCAMLFIND query netstring`"
+    requires="$requires netstring"
+    AC_MSG_RESULT(ok)
+  fi
 fi
 
 # Bytes
--- origsrc/liquidsoap-1.2.1-full/ocaml-lastfm-0.3.1/src/lastfm.ml	2015-08-03 11:18:37.000000000 -0500
+++ src/liquidsoap-1.2.1-full/ocaml-lastfm-0.3.1/src/lastfm.ml	2017-03-30 23:14:29.703272600 -0500
@@ -38,13 +38,13 @@ struct
     in
     let call = 
       match request with
-        | Get -> new Http_client.get_call
-        | Post _ -> new Http_client.post_call
+        | Get -> new Nethttp_client.get_call
+        | Post _ -> new Nethttp_client.post_call
     in
-    let pipeline = new Http_client.pipeline in
+    let pipeline = new Nethttp_client.pipeline in
     pipeline#set_options 
       { pipeline#get_options with 
-          Http_client.connection_timeout = timeout 
+          Nethttp_client.connection_timeout = timeout 
       } ;
     let http_headers = call#request_header `Base in
     let body = call#request_body in
@@ -72,7 +72,7 @@ struct
       pipeline#run () ;
       call#response_body#value
     with
-      | Http_client.Http_protocol e 
+      | Nethttp_client.Http_protocol e 
       | e -> 
          pipeline#reset() ; 
          raise (Http  (Printexc.to_string e))
